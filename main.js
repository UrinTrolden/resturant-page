(()=>{"use strict";var n={28:(n,r,e)=>{e.d(r,{Z:()=>f});var t=e(537),o=e.n(t),a=e(645),i=e.n(a),c=e(667),s=e.n(c),A=new URL(e(220),e.b),l=new URL(e(36),e.b),d=i()(o()),u=s()(A),p=s()(l);d.push([n.id,"@font-face {\r\n    font-family: 'gamixregular';\r\n    src: url("+u+") format('woff2'),\r\n         url("+p+") format('woff');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n\r\n}\r\n\r\n.contents {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: medium dashed green;\r\n    height: auto;\r\n    min-width: 500px;\r\n    max-width: 700px;\r\n    background-color: lightgray;\r\n    position: relative;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n}\r\n\r\n.container {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 0;\r\n    text-align: center;\r\n    \r\n}\r\n\r\n.title {\r\n    margin: 1em;\r\n    font-family: 'gamixregular';\r\n    font-size: 2em;\r\n}\r\n\r\n.tabs {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    width: 100%;\r\n    margin: 0;\r\n}\r\n\r\n.tabbutton {\r\n    font-family: 'gamixregular';\r\n    color:olivedrab;\r\n    font-size: 3em;\r\n    background-color: lightgray;\r\n}\r\n\r\n.forret {\r\n    margin: 50px;\r\n}\r\n\r\n.quotebox {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 1em;\r\n    font-style: oblique;\r\n}\r\n\r\n.footer {\r\n    position: relative;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    text-align: center;\r\n}\r\n\r\n.img {\r\n    width:400px;\r\n    height:200px;\r\n    object-fit: cover;\r\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B;+DACqD;IACrD,mBAAmB;IACnB,kBAAkB;;AAEtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,2BAA2B;IAC3B,YAAY;IACZ,gBAAgB;IAChB,gBAAgB;IAChB,2BAA2B;IAC3B,kBAAkB;IAClB,SAAS;IACT,2BAA2B;AAC/B;;AAEA;IACI,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,SAAS;IACT,kBAAkB;;AAEtB;;AAEA;IACI,WAAW;IACX,2BAA2B;IAC3B,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,SAAS;AACb;;AAEA;IACI,2BAA2B;IAC3B,eAAe;IACf,cAAc;IACd,2BAA2B;AAC/B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;IACR,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,OAAO;IACP,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,iBAAiB;AACrB",sourcesContent:["@font-face {\r\n    font-family: 'gamixregular';\r\n    src: url('./fonts/gamix-webfont.woff2') format('woff2'),\r\n         url('./fonts/gamix-webfont.woff') format('woff');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n\r\n}\r\n\r\n.contents {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: medium dashed green;\r\n    height: auto;\r\n    min-width: 500px;\r\n    max-width: 700px;\r\n    background-color: lightgray;\r\n    position: relative;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n}\r\n\r\n.container {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 0;\r\n    text-align: center;\r\n    \r\n}\r\n\r\n.title {\r\n    margin: 1em;\r\n    font-family: 'gamixregular';\r\n    font-size: 2em;\r\n}\r\n\r\n.tabs {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    width: 100%;\r\n    margin: 0;\r\n}\r\n\r\n.tabbutton {\r\n    font-family: 'gamixregular';\r\n    color:olivedrab;\r\n    font-size: 3em;\r\n    background-color: lightgray;\r\n}\r\n\r\n.forret {\r\n    margin: 50px;\r\n}\r\n\r\n.quotebox {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 1em;\r\n    font-style: oblique;\r\n}\r\n\r\n.footer {\r\n    position: relative;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    text-align: center;\r\n}\r\n\r\n.img {\r\n    width:400px;\r\n    height:200px;\r\n    object-fit: cover;\r\n}"],sourceRoot:""}]);const f=d},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);t&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),r.push(l))}},r}},667:n=>{n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(i).concat([a]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],A=t.base?s[0]+t.base:s[0],l=a[A]||0,d="".concat(A," ").concat(l);a[A]=l+1;var u=e(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)r[u].references++,r[u].updater(p);else{var f=o(p,t);t.byIndex=c,r.splice(c,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=e(a[i]);r[c].references--}for(var s=t(n,o),A=0;A<a.length;A++){var l=e(a[A]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}a=s}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},36:(n,r,e)=>{n.exports=e.p+"e30298bb2468dbc6.woff"},220:(n,r,e)=>{n.exports=e.p+"dd120844d1971348.woff2"},777:(n,r,e)=>{n.exports=e.p+"9063a21dc26411fb.png"},84:(n,r,e)=>{n.exports=e.p+"2e80bf7d3ac111a0.png"},514:(n,r,e)=>{n.exports=e.p+"2973b625c58b3e45.png"},97:(n,r,e)=>{n.exports=e.p+"e3704ddb51d7620f.png"}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var a=r[t]={id:t,exports:{}};return n[t](a,a.exports,e),a.exports}e.m=n,e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.p="/",e.b=document.baseURI||self.location.href;var t={};(()=>{e.d(t,{wU:()=>I,fH:()=>w,i2:()=>v});var n=e(379),r=e.n(n),o=e(795),a=e.n(o),i=e(569),c=e.n(i),s=e(565),A=e.n(s),l=e(216),d=e.n(l),u=e(589),p=e.n(u),f=e(28),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=c().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),r()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;var g=e(777),h=e(97),B=e(84),C=e(514);const b=(n,r,e)=>{const t=I(n,"div");t.innerText=e;const o=I("picture","div"),a=new Image;return a.src=r,o.appendChild(a),t.appendChild(o),t},v=n=>{const r=I("title","div");r.innerText=n,w.container.appendChild(r)};function I(n,r){const e=document.createElement(r);return e.classList.add(n),e}const x=(()=>{const n=I("contents","div");return document.body.appendChild(n),{contents:n}})(),y=(()=>{const n=I("tabs","div"),r=I("tabbutton","button"),e=I("tabbutton","button"),t=I("tabbutton","button");return r.innerText="home",e.innerText="menu",t.innerText="about",n.appendChild(r),n.appendChild(e),n.appendChild(t),x.contents.appendChild(n),{homeButton:r,menuButton:e,aboutButton:t}})(),w=(()=>{const n=I("container","div");return x.contents.appendChild(n),{container:n}})();y.menuButton.onclick=()=>{w.container.innerHTML="",v("Foretter"),w.container.appendChild(b("forret",B,"Durums' Blade 59,-")),w.container.appendChild(b("forret",C,"Durums' Ring 59,-"))},y.homeButton.onclick=()=>{(()=>{w.container.innerHTML="";const n=I("quotebox","div");v("Velkommen til epic gamer food palace"),w.container.appendChild(n);const r=new Image;r.src=h;const e=I("quote","h3");e.innerText="'Jeg elsker mad' - Jehova",n.appendChild(r),n.appendChild(e)})()},y.aboutButton.onclick=()=>{(()=>{w.container.innerHTML="",v("Find epic gamer food palace");const n=new Image;n.src=g,w.container.appendChild(n),n.classList.add("img");const r=I("description","p");r.innerText="Som det ses på billedet går du bare hen af vejen så er du ved EPIC GAMER FOOD PALACE",w.container.appendChild(r)})()},(()=>{const n=I("footer","footer");document.body.appendChild(n);const r=I("footerText","p");r.innerText="Made by UrinTrolden",document.body.appendChild(n),n.appendChild(r)})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,